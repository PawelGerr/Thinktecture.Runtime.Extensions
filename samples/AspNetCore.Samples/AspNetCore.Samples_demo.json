{
  "openapi": "3.0.4",
  "info": {
    "title": "Demo API",
    "version": "v1"
  },
  "paths": {
    "/api/category/{category}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/group/{group}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/productType/{productType}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          }
        }
      }
    },
    "/api/productType": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          }
        }
      }
    },
    "/api/productTypeWithFilter": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          }
        }
      }
    },
    "/api/boundaryWithFactories/{boundary}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "boundary",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BoundaryWithFactoriesAsString"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoundaryWithFactories"
                }
              }
            }
          }
        }
      }
    },
    "/api/productTypeWrapper": {
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTypeWrapper"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTypeWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/api/productName/{name}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductName"
                }
              }
            }
          }
        }
      }
    },
    "/api/productName": {
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductName"
                }
              }
            }
          }
        }
      }
    },
    "/api/otherProductName/{name}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OtherProductName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherProductName"
                }
              }
            }
          }
        }
      }
    },
    "/api/otherProductName": {
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtherProductName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherProductName"
                }
              }
            }
          }
        }
      }
    },
    "/api/boundary": {
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Boundary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boundary"
                }
              }
            }
          }
        }
      }
    },
    "/api/enddate/{date}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OpenEndDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenEndDate"
                }
              }
            }
          }
        }
      }
    },
    "/api/enddate": {
      "post": {
        "tags": [
          "demo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenEndDate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenEndDate"
                }
              }
            }
          }
        }
      }
    },
    "/api/textOrNumber/{textOrNumber}": {
      "get": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "textOrNumber",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TextOrNumberSerializableAsString"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextOrNumberSerializable"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/channels": {
      "get": {
        "tags": [
          "demo"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notification/channels/{type}": {
      "post": {
        "tags": [
          "demo"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NotificationChannelTypeDto"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Boundary": {
        "type": "object",
        "properties": {
          "lower": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "upper": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BoundaryWithFactories": {
        "type": "string",
        "description": "Represents a boundary with lower and upper decimal values, supporting custom object factories for string and tuple inputs."
      },
      "BoundaryWithFactoriesAsString": {
        "type": "string",
        "description": "Represents a boundary with lower and upper decimal values, supporting custom object factories for string and tuple inputs."
      },
      "NotificationChannelTypeDto": {
        "enum": [
          "email",
          "sms"
        ],
        "type": "string",
        "x-enum-varnames": [
          "email",
          "sms"
        ]
      },
      "OpenEndDate": {
        "type": "string",
        "format": "date"
      },
      "OtherProductName": {
        "type": "string"
      },
      "ProductCategory": {
        "enum": [
          "Fruits",
          "Dairy"
        ],
        "type": "string",
        "x-enum-varnames": [
          "Fruits",
          "Dairy"
        ]
      },
      "ProductGroup": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enum-varnames": [
          "Apple",
          "Orange"
        ]
      },
      "ProductName": {
        "type": "string"
      },
      "ProductType": {
        "enum": [
          "Groceries",
          "Housewares"
        ],
        "type": "string",
        "description": "Represents a product type.",
        "x-enum-varnames": [
          "Groceries",
          "Housewares"
        ]
      },
      "ProductTypeWrapper": {
        "type": "object",
        "properties": {
          "productType": {
            "$ref": "#/components/schemas/ProductType"
          }
        },
        "additionalProperties": false,
        "description": "Represents a wrapper around the Thinktecture.ProductTypeWrapper.ProductType entity."
      },
      "TextOrNumberSerializable": {
        "type": "string"
      },
      "TextOrNumberSerializableAsString": {
        "type": "string"
      }
    }
  }
}