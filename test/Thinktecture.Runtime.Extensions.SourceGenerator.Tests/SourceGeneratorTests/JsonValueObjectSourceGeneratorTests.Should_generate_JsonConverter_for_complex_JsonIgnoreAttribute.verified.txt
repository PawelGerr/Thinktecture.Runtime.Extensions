// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::System.Text.Json.Serialization.JsonConverterAttribute(typeof(JsonConverterFactory))]
partial class ComplexValueObjectWithJsonIgnore
{
   public sealed class JsonConverter : global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.ComplexValueObjectWithJsonIgnore>
   {
      private readonly string _stringProperty_IgnorePropertyName;
      private readonly string _stringProperty_Ignore_AlwaysPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<string?> _stringProperty_Ignore_WhenWritingDefaultConverter;
      private readonly string _stringProperty_Ignore_WhenWritingDefaultPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<string?> _stringProperty_Ignore_WhenWritingNullConverter;
      private readonly string _stringProperty_Ignore_WhenWritingNullPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<string?> _stringProperty_Ignore_NeverConverter;
      private readonly string _stringProperty_Ignore_NeverPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<string?> _stringPropertyConverter;
      private readonly string _stringPropertyPropertyName;
      private readonly string _intProperty_IgnorePropertyName;
      private readonly string _intProperty_Ignore_AlwaysPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int> _intProperty_Ignore_WhenWritingDefaultConverter;
      private readonly string _intProperty_Ignore_WhenWritingDefaultPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int> _intProperty_Ignore_NeverConverter;
      private readonly string _intProperty_Ignore_NeverPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int> _intPropertyConverter;
      private readonly string _intPropertyPropertyName;
      private readonly string _nullableIntProperty_IgnorePropertyName;
      private readonly string _nullableIntProperty_Ignore_AlwaysPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int?> _nullableIntProperty_Ignore_WhenWritingDefaultConverter;
      private readonly string _nullableIntProperty_Ignore_WhenWritingDefaultPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int?> _nullableIntProperty_Ignore_WhenWritingNullConverter;
      private readonly string _nullableIntProperty_Ignore_WhenWritingNullPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int?> _nullableIntProperty_Ignore_NeverConverter;
      private readonly string _nullableIntProperty_Ignore_NeverPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int?> _nullableIntPropertyConverter;
      private readonly string _nullableIntPropertyPropertyName;

      public JsonConverter(global::System.Text.Json.JsonSerializerOptions options)
      {
         if(options is null)
            throw new global::System.ArgumentNullException(nameof(options));

         var namingPolicy = options.PropertyNamingPolicy;

         this._stringProperty_IgnorePropertyName = namingPolicy?.ConvertName("StringProperty_Ignore") ?? "StringProperty_Ignore";
         this._stringProperty_Ignore_AlwaysPropertyName = namingPolicy?.ConvertName("StringProperty_Ignore_Always") ?? "StringProperty_Ignore_Always";
         this._stringProperty_Ignore_WhenWritingDefaultConverter = (global::System.Text.Json.Serialization.JsonConverter<string?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(string));
         this._stringProperty_Ignore_WhenWritingDefaultPropertyName = namingPolicy?.ConvertName("StringProperty_Ignore_WhenWritingDefault") ?? "StringProperty_Ignore_WhenWritingDefault";
         this._stringProperty_Ignore_WhenWritingNullConverter = (global::System.Text.Json.Serialization.JsonConverter<string?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(string));
         this._stringProperty_Ignore_WhenWritingNullPropertyName = namingPolicy?.ConvertName("StringProperty_Ignore_WhenWritingNull") ?? "StringProperty_Ignore_WhenWritingNull";
         this._stringProperty_Ignore_NeverConverter = (global::System.Text.Json.Serialization.JsonConverter<string?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(string));
         this._stringProperty_Ignore_NeverPropertyName = namingPolicy?.ConvertName("StringProperty_Ignore_Never") ?? "StringProperty_Ignore_Never";
         this._stringPropertyConverter = (global::System.Text.Json.Serialization.JsonConverter<string?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(string));
         this._stringPropertyPropertyName = namingPolicy?.ConvertName("StringProperty") ?? "StringProperty";
         this._intProperty_IgnorePropertyName = namingPolicy?.ConvertName("IntProperty_Ignore") ?? "IntProperty_Ignore";
         this._intProperty_Ignore_AlwaysPropertyName = namingPolicy?.ConvertName("IntProperty_Ignore_Always") ?? "IntProperty_Ignore_Always";
         this._intProperty_Ignore_WhenWritingDefaultConverter = (global::System.Text.Json.Serialization.JsonConverter<int>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int));
         this._intProperty_Ignore_WhenWritingDefaultPropertyName = namingPolicy?.ConvertName("IntProperty_Ignore_WhenWritingDefault") ?? "IntProperty_Ignore_WhenWritingDefault";
         this._intProperty_Ignore_NeverConverter = (global::System.Text.Json.Serialization.JsonConverter<int>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int));
         this._intProperty_Ignore_NeverPropertyName = namingPolicy?.ConvertName("IntProperty_Ignore_Never") ?? "IntProperty_Ignore_Never";
         this._intPropertyConverter = (global::System.Text.Json.Serialization.JsonConverter<int>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int));
         this._intPropertyPropertyName = namingPolicy?.ConvertName("IntProperty") ?? "IntProperty";
         this._nullableIntProperty_IgnorePropertyName = namingPolicy?.ConvertName("NullableIntProperty_Ignore") ?? "NullableIntProperty_Ignore";
         this._nullableIntProperty_Ignore_AlwaysPropertyName = namingPolicy?.ConvertName("NullableIntProperty_Ignore_Always") ?? "NullableIntProperty_Ignore_Always";
         this._nullableIntProperty_Ignore_WhenWritingDefaultConverter = (global::System.Text.Json.Serialization.JsonConverter<int?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int?));
         this._nullableIntProperty_Ignore_WhenWritingDefaultPropertyName = namingPolicy?.ConvertName("NullableIntProperty_Ignore_WhenWritingDefault") ?? "NullableIntProperty_Ignore_WhenWritingDefault";
         this._nullableIntProperty_Ignore_WhenWritingNullConverter = (global::System.Text.Json.Serialization.JsonConverter<int?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int?));
         this._nullableIntProperty_Ignore_WhenWritingNullPropertyName = namingPolicy?.ConvertName("NullableIntProperty_Ignore_WhenWritingNull") ?? "NullableIntProperty_Ignore_WhenWritingNull";
         this._nullableIntProperty_Ignore_NeverConverter = (global::System.Text.Json.Serialization.JsonConverter<int?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int?));
         this._nullableIntProperty_Ignore_NeverPropertyName = namingPolicy?.ConvertName("NullableIntProperty_Ignore_Never") ?? "NullableIntProperty_Ignore_Never";
         this._nullableIntPropertyConverter = (global::System.Text.Json.Serialization.JsonConverter<int?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int?));
         this._nullableIntPropertyPropertyName = namingPolicy?.ConvertName("NullableIntProperty") ?? "NullableIntProperty";
      }

      /// <inheritdoc />
      public override global::Thinktecture.Tests.ComplexValueObjectWithJsonIgnore? Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
      {
         if (reader.TokenType == global::System.Text.Json.JsonTokenType.Null)
            return default;

         if (reader.TokenType != global::System.Text.Json.JsonTokenType.StartObject)
            throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"ComplexValueObjectWithJsonIgnore\". Expected token: \"{(global::System.Text.Json.JsonTokenType.StartObject)}\".");

         string? @stringProperty_Ignore = default;
         string? @stringProperty_Ignore_Always = default;
         string? @stringProperty_Ignore_WhenWritingDefault = default;
         string? @stringProperty_Ignore_WhenWritingNull = default;
         string? @stringProperty_Ignore_Never = default;
         string? @stringProperty = default;
         int @intProperty_Ignore = default;
         int @intProperty_Ignore_Always = default;
         int @intProperty_Ignore_WhenWritingDefault = default;
         int @intProperty_Ignore_Never = default;
         int @intProperty = default;
         int? @nullableIntProperty_Ignore = default;
         int? @nullableIntProperty_Ignore_Always = default;
         int? @nullableIntProperty_Ignore_WhenWritingDefault = default;
         int? @nullableIntProperty_Ignore_WhenWritingNull = default;
         int? @nullableIntProperty_Ignore_Never = default;
         int? @nullableIntProperty = default;

         var comparer = options.PropertyNameCaseInsensitive ? global::System.StringComparer.OrdinalIgnoreCase : global::System.StringComparer.Ordinal;

         while (reader.Read())
         {
            if (reader.TokenType == global::System.Text.Json.JsonTokenType.EndObject)
               break;

            if (reader.TokenType != global::System.Text.Json.JsonTokenType.PropertyName)
               throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"ComplexValueObjectWithJsonIgnore\". Expected token: \"{(global::System.Text.Json.JsonTokenType.PropertyName)}\".");

            var propName = reader.GetString();

            if(!reader.Read())
               throw new global::System.Text.Json.JsonException($"Unexpected end of the JSON message when trying the read the value of \"{propName}\" during deserialization of \"ComplexValueObjectWithJsonIgnore\".");

            if (comparer.Equals(propName, this._stringProperty_IgnorePropertyName))
            {
               // StringProperty_Ignore has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._stringProperty_Ignore_AlwaysPropertyName))
            {
               // StringProperty_Ignore_Always has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._stringProperty_Ignore_WhenWritingDefaultPropertyName))
            {
               @stringProperty_Ignore_WhenWritingDefault = this._stringProperty_Ignore_WhenWritingDefaultConverter.Read(ref reader, typeof(string), options);
            }
            else if (comparer.Equals(propName, this._stringProperty_Ignore_WhenWritingNullPropertyName))
            {
               @stringProperty_Ignore_WhenWritingNull = this._stringProperty_Ignore_WhenWritingNullConverter.Read(ref reader, typeof(string), options);
            }
            else if (comparer.Equals(propName, this._stringProperty_Ignore_NeverPropertyName))
            {
               @stringProperty_Ignore_Never = this._stringProperty_Ignore_NeverConverter.Read(ref reader, typeof(string), options);
            }
            else if (comparer.Equals(propName, this._stringPropertyPropertyName))
            {
               @stringProperty = this._stringPropertyConverter.Read(ref reader, typeof(string), options);
            }
            else if (comparer.Equals(propName, this._intProperty_IgnorePropertyName))
            {
               // IntProperty_Ignore has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._intProperty_Ignore_AlwaysPropertyName))
            {
               // IntProperty_Ignore_Always has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._intProperty_Ignore_WhenWritingDefaultPropertyName))
            {
               @intProperty_Ignore_WhenWritingDefault = this._intProperty_Ignore_WhenWritingDefaultConverter.Read(ref reader, typeof(int), options);
            }
            else if (comparer.Equals(propName, this._intProperty_Ignore_NeverPropertyName))
            {
               @intProperty_Ignore_Never = this._intProperty_Ignore_NeverConverter.Read(ref reader, typeof(int), options);
            }
            else if (comparer.Equals(propName, this._intPropertyPropertyName))
            {
               @intProperty = this._intPropertyConverter.Read(ref reader, typeof(int), options);
            }
            else if (comparer.Equals(propName, this._nullableIntProperty_IgnorePropertyName))
            {
               // NullableIntProperty_Ignore has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._nullableIntProperty_Ignore_AlwaysPropertyName))
            {
               // NullableIntProperty_Ignore_Always has JsonIgnoreCondition.Always, so we do not deserialize it.
            }
            else if (comparer.Equals(propName, this._nullableIntProperty_Ignore_WhenWritingDefaultPropertyName))
            {
               @nullableIntProperty_Ignore_WhenWritingDefault = this._nullableIntProperty_Ignore_WhenWritingDefaultConverter.Read(ref reader, typeof(int?), options);
            }
            else if (comparer.Equals(propName, this._nullableIntProperty_Ignore_WhenWritingNullPropertyName))
            {
               @nullableIntProperty_Ignore_WhenWritingNull = this._nullableIntProperty_Ignore_WhenWritingNullConverter.Read(ref reader, typeof(int?), options);
            }
            else if (comparer.Equals(propName, this._nullableIntProperty_Ignore_NeverPropertyName))
            {
               @nullableIntProperty_Ignore_Never = this._nullableIntProperty_Ignore_NeverConverter.Read(ref reader, typeof(int?), options);
            }
            else if (comparer.Equals(propName, this._nullableIntPropertyPropertyName))
            {
               @nullableIntProperty = this._nullableIntPropertyConverter.Read(ref reader, typeof(int?), options);
            }
            else
            {
               throw new global::System.Text.Json.JsonException($"Unknown member \"{propName}\" encountered when trying to deserialize \"ComplexValueObjectWithJsonIgnore\".");
            }
         }

         var validationError = global::Thinktecture.Tests.ComplexValueObjectWithJsonIgnore.Validate(
                                    @stringProperty_Ignore!,
                                    @stringProperty_Ignore_Always!,
                                    @stringProperty_Ignore_WhenWritingDefault!,
                                    @stringProperty_Ignore_WhenWritingNull!,
                                    @stringProperty_Ignore_Never!,
                                    @stringProperty!,
                                    @intProperty_Ignore!,
                                    @intProperty_Ignore_Always!,
                                    @intProperty_Ignore_WhenWritingDefault!,
                                    @intProperty_Ignore_Never!,
                                    @intProperty!,
                                    @nullableIntProperty_Ignore!,
                                    @nullableIntProperty_Ignore_Always!,
                                    @nullableIntProperty_Ignore_WhenWritingDefault!,
                                    @nullableIntProperty_Ignore_WhenWritingNull!,
                                    @nullableIntProperty_Ignore_Never!,
                                    @nullableIntProperty!,
                                    out var obj);

         if (validationError is not null)
            throw new global::System.Text.Json.JsonException(validationError.ToString() ?? "Unable to deserialize \"ComplexValueObjectWithJsonIgnore\".");

         return obj;
      }

      /// <inheritdoc />
      public override void Write(global::System.Text.Json.Utf8JsonWriter writer, global::Thinktecture.Tests.ComplexValueObjectWithJsonIgnore value, global::System.Text.Json.JsonSerializerOptions options)
      {
         writer.WriteStartObject();

         var ignoreNullValues = options.DefaultIgnoreCondition is global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull or global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;
         var ignoreDefaultValues = options.DefaultIgnoreCondition == global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;

         var @stringProperty_Ignore_WhenWritingDefaultPropertyValue = value.StringProperty_Ignore_WhenWritingDefault;

         if(@stringProperty_Ignore_WhenWritingDefaultPropertyValue is not null)
         {
            writer.WritePropertyName(this._stringProperty_Ignore_WhenWritingDefaultPropertyName);
            this._stringProperty_Ignore_WhenWritingDefaultConverter.Write(writer, @stringProperty_Ignore_WhenWritingDefaultPropertyValue, options);
         }
         var @stringProperty_Ignore_WhenWritingNullPropertyValue = value.StringProperty_Ignore_WhenWritingNull;

         if(@stringProperty_Ignore_WhenWritingNullPropertyValue is not null)
         {
            writer.WritePropertyName(this._stringProperty_Ignore_WhenWritingNullPropertyName);
            this._stringProperty_Ignore_WhenWritingNullConverter.Write(writer, @stringProperty_Ignore_WhenWritingNullPropertyValue, options);
         }
         var @stringProperty_Ignore_NeverPropertyValue = value.StringProperty_Ignore_Never;

            writer.WritePropertyName(this._stringProperty_Ignore_NeverPropertyName);
            this._stringProperty_Ignore_NeverConverter.Write(writer, @stringProperty_Ignore_NeverPropertyValue, options);
         var @stringPropertyPropertyValue = value.StringProperty;

         if(!ignoreNullValues || @stringPropertyPropertyValue is not null)
         {
            writer.WritePropertyName(this._stringPropertyPropertyName);
            this._stringPropertyConverter.Write(writer, @stringPropertyPropertyValue, options);
         }
         var @intProperty_Ignore_WhenWritingDefaultPropertyValue = value.IntProperty_Ignore_WhenWritingDefault;

         if(!@intProperty_Ignore_WhenWritingDefaultPropertyValue.Equals(default(int)))
         {
            writer.WritePropertyName(this._intProperty_Ignore_WhenWritingDefaultPropertyName);
            this._intProperty_Ignore_WhenWritingDefaultConverter.Write(writer, @intProperty_Ignore_WhenWritingDefaultPropertyValue, options);
         }
         var @intProperty_Ignore_NeverPropertyValue = value.IntProperty_Ignore_Never;

            writer.WritePropertyName(this._intProperty_Ignore_NeverPropertyName);
            this._intProperty_Ignore_NeverConverter.Write(writer, @intProperty_Ignore_NeverPropertyValue, options);
         var @intPropertyPropertyValue = value.IntProperty;

         if(!ignoreDefaultValues || !@intPropertyPropertyValue.Equals(default(int)))
         {
            writer.WritePropertyName(this._intPropertyPropertyName);
            this._intPropertyConverter.Write(writer, @intPropertyPropertyValue, options);
         }
         var @nullableIntProperty_Ignore_WhenWritingDefaultPropertyValue = value.NullableIntProperty_Ignore_WhenWritingDefault;

         if(@nullableIntProperty_Ignore_WhenWritingDefaultPropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableIntProperty_Ignore_WhenWritingDefaultPropertyName);
            this._nullableIntProperty_Ignore_WhenWritingDefaultConverter.Write(writer, @nullableIntProperty_Ignore_WhenWritingDefaultPropertyValue, options);
         }
         var @nullableIntProperty_Ignore_WhenWritingNullPropertyValue = value.NullableIntProperty_Ignore_WhenWritingNull;

         if(@nullableIntProperty_Ignore_WhenWritingNullPropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableIntProperty_Ignore_WhenWritingNullPropertyName);
            this._nullableIntProperty_Ignore_WhenWritingNullConverter.Write(writer, @nullableIntProperty_Ignore_WhenWritingNullPropertyValue, options);
         }
         var @nullableIntProperty_Ignore_NeverPropertyValue = value.NullableIntProperty_Ignore_Never;

            writer.WritePropertyName(this._nullableIntProperty_Ignore_NeverPropertyName);
            this._nullableIntProperty_Ignore_NeverConverter.Write(writer, @nullableIntProperty_Ignore_NeverPropertyValue, options);
         var @nullableIntPropertyPropertyValue = value.NullableIntProperty;

         if(!ignoreNullValues || @nullableIntPropertyPropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableIntPropertyPropertyName);
            this._nullableIntPropertyConverter.Write(writer, @nullableIntPropertyPropertyValue, options);
         }
         writer.WriteEndObject();
      }
   }

   public class JsonConverterFactory : global::System.Text.Json.Serialization.JsonConverterFactory
   {
      /// <inheritdoc />
      public override bool CanConvert(global::System.Type typeToConvert)
      {
         return typeof(global::Thinktecture.Tests.ComplexValueObjectWithJsonIgnore).IsAssignableFrom(typeToConvert);
      }

      /// <inheritdoc />
      public override global::System.Text.Json.Serialization.JsonConverter CreateConverter(global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
      {
         if (typeToConvert is null)
            throw new global::System.ArgumentNullException(nameof(typeToConvert));
         if (options is null)
            throw new global::System.ArgumentNullException(nameof(options));

         return new JsonConverter(options);
      }
   }
}
