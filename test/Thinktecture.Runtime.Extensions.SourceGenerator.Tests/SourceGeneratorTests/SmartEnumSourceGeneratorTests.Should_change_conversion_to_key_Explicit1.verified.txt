// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

partial class TestEnum :
   global::System.IComparable,
   global::System.IComparable<global::Thinktecture.Tests.TestEnum>
{
   /// <inheritdoc />
   public int CompareTo(object? obj)
   {
      if(obj is null)
         return 1;

      if(obj is not global::Thinktecture.Tests.TestEnum item)
         throw new global::System.ArgumentException("Argument must be of type \"TestEnum\".", nameof(obj));

      return ((global::System.IComparable)this).CompareTo(item);
   }

   /// <inheritdoc />
   public int CompareTo(global::Thinktecture.Tests.TestEnum? obj)
   {
      if(obj is null)
         return 1;

      return global::System.StringComparer.OrdinalIgnoreCase.Compare(this.Key, obj.Key);
   }
}
