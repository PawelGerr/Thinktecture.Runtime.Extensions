// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::MessagePack.MessagePackFormatter(typeof(ValueObjectMessagePackFormatter))]
partial struct TestValueObject
{
   public sealed class ValueObjectMessagePackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Thinktecture.Tests.TestValueObject>
   {
      /// <inheritdoc />
      public global::Thinktecture.Tests.TestValueObject Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
      {
         if (reader.TryReadNil())
            return default;

         var count = reader.ReadArrayHeader();

         if (count != 3)
            throw new global::MessagePack.MessagePackSerializationException($"Invalid member count. Expected 3 but found {count} field/property values.");

         global::MessagePack.IFormatterResolver resolver = options.Resolver;
         options.Security.DepthStep(ref reader);

         try
         {

            var @referenceField = reader.ReadString()!;
            var @structProperty = reader.ReadInt32()!;
            var @nullableStructProperty = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<decimal?>(resolver).Deserialize(ref reader, options)!;

            var validationError = global::Thinktecture.Tests.TestValueObject.Validate(
                                       @referenceField,
                                       @structProperty,
                                       @nullableStructProperty,
                                       out var obj);

            if (validationError is not null)
               throw new global::MessagePack.MessagePackSerializationException(validationError.ToString() ?? "Unable to deserialize \"TestValueObject\".");

            return obj;
         }
         finally
         {
           reader.Depth--;
         }
      }

      /// <inheritdoc />
      public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Thinktecture.Tests.TestValueObject value, global::MessagePack.MessagePackSerializerOptions options)
      {
         writer.WriteArrayHeader(3);

         var resolver = options.Resolver;
         writer.Write(value.ReferenceField);
         writer.Write(value.StructProperty);
         global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<decimal?>(resolver).Serialize(ref writer, value.NullableStructProperty, options);
      }
   }
}
