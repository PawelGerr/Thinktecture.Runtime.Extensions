// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::ProtoBuf.ProtoContract(Serializer = typeof(ValueObjectProtoBufSerializer))]
partial struct TestValueObject
{
   public sealed class ValueObjectProtoBufSerializer : global::ProtoBuf.Serializers.ISerializer<global::Thinktecture.Tests.TestValueObject>
   {
      private const global::ProtoBuf.Serializers.SerializerFeatures _WIRE_TYPE_MASK = (global::ProtoBuf.Serializers.SerializerFeatures) 15;

      public global::ProtoBuf.Serializers.SerializerFeatures Features => global::ProtoBuf.Serializers.SerializerFeatures.WireTypeStartGroup | global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage;

      private global::ProtoBuf.Serializers.ISerializer<string>? _referenceFieldSerializer;
      private global::ProtoBuf.Serializers.ISerializer<int>? _structPropertySerializer;
      private global::ProtoBuf.Serializers.ISerializer<decimal?>? _nullableStructPropertySerializer;

      /// <inheritdoc />
      public global::Thinktecture.Tests.TestValueObject Read(ref global::ProtoBuf.ProtoReader.State state, global::Thinktecture.Tests.TestValueObject value)
      {
         _referenceFieldSerializer ??= state.GetSerializer<string>();
         _structPropertySerializer ??= state.GetSerializer<int>();
         _nullableStructPropertySerializer ??= state.GetSerializer<decimal?>();

         string? @referenceField = default;
         int @structProperty = default;
         decimal? @nullableStructProperty = default;

         int fieldNumber;

         while ((fieldNumber = state.ReadFieldHeader()) > 0)
         {
            switch (fieldNumber)
            {
               case 1:
               {
                  if ((_referenceFieldSerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
                  {
                     @referenceField = state.ReadMessage(_referenceFieldSerializer.Features, default!, _referenceFieldSerializer);
                  }
                  else
                  {
                     @referenceField = _referenceFieldSerializer.Read(ref state, default!);
                  }
                  break;
               }
               case 2:
               {
                  if ((_structPropertySerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
                  {
                     @structProperty = state.ReadMessage(_structPropertySerializer.Features, default!, _structPropertySerializer);
                  }
                  else
                  {
                     @structProperty = _structPropertySerializer.Read(ref state, default!);
                  }
                  break;
               }
               case 3:
               {
                  if ((_nullableStructPropertySerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
                  {
                     @nullableStructProperty = state.ReadMessage(_nullableStructPropertySerializer.Features, default!, _nullableStructPropertySerializer);
                  }
                  else
                  {
                     @nullableStructProperty = _nullableStructPropertySerializer.Read(ref state, default!);
                  }
                  break;
               }
               default:
               {
                  throw new global::ProtoBuf.ProtoException($"Unexpected field number {fieldNumber} during deserialization of \"TestValueObject\".");
               }
            }
         }

         var validationError = global::Thinktecture.Tests.TestValueObject.Validate(
                                    @referenceField!,
                                    @structProperty!,
                                    @nullableStructProperty!,
                                    out var obj);

         if (validationError is not null)
            throw new global::ProtoBuf.ProtoException(validationError.ToString() ?? "Unable to deserialize \"TestValueObject\".");

         return obj!;
      }

      /// <inheritdoc />
      public void Write(ref global::ProtoBuf.ProtoWriter.State state, global::Thinktecture.Tests.TestValueObject value)
      {
         _referenceFieldSerializer ??= state.GetSerializer<string>();
         _structPropertySerializer ??= state.GetSerializer<int>();
         _nullableStructPropertySerializer ??= state.GetSerializer<decimal?>();

         state.WriteFieldHeader(1, (global::ProtoBuf.WireType) (_referenceFieldSerializer.Features & _WIRE_TYPE_MASK));

         if ((_referenceFieldSerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
         {
            state.WriteMessage(_referenceFieldSerializer.Features, value.ReferenceField);
         }
         else
         {
            _referenceFieldSerializer.Write(ref state, value.ReferenceField);
         }

         state.WriteFieldHeader(2, (global::ProtoBuf.WireType) (_structPropertySerializer.Features & _WIRE_TYPE_MASK));

         if ((_structPropertySerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
         {
            state.WriteMessage(_structPropertySerializer.Features, value.StructProperty);
         }
         else
         {
            _structPropertySerializer.Write(ref state, value.StructProperty);
         }

         state.WriteFieldHeader(3, (global::ProtoBuf.WireType) (_nullableStructPropertySerializer.Features & _WIRE_TYPE_MASK));

         if ((_nullableStructPropertySerializer.Features & global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage) == global::ProtoBuf.Serializers.SerializerFeatures.CategoryMessage)
         {
            state.WriteMessage(_nullableStructPropertySerializer.Features, value.NullableStructProperty);
         }
         else
         {
            _nullableStructPropertySerializer.Write(ref state, value.NullableStructProperty);
         }

      }
   }
}
