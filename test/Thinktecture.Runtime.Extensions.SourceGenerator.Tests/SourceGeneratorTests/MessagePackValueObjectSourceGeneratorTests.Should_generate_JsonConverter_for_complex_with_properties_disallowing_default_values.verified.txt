// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::MessagePack.MessagePackFormatter(typeof(ValueObjectMessagePackFormatter))]
partial class TestValueObject
{
   /// <summary>
   /// MassagePack formatter for <see cref="TestValueObject"/>.
   /// </summary>
   public sealed class ValueObjectMessagePackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Thinktecture.Tests.TestValueObject?>
   {
      /// <inheritdoc />
      public global::Thinktecture.Tests.TestValueObject? Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
      {
         if (reader.TryReadNil())
            return default;

         options.Security.DepthStep(ref reader);

         var count = reader.ReadArrayHeader();
         global::MessagePack.IFormatterResolver resolver = options.Resolver;

         global::Thinktecture.Tests.ClassDisallowingDefaultValues? @nonNullableReferenceType = default;
         global::Thinktecture.Tests.ClassDisallowingDefaultValues? @nullableReferenceType = default;
         global::Thinktecture.Argument<global::Thinktecture.Tests.StructDisallowingDefaultValues> @nonNullableStruct = default;
         global::Thinktecture.Tests.StructDisallowingDefaultValues? @nullableStruct = default;

         try
         {
            for (int i = 0; i < count; i++)
            {
               switch (i)
               {
                  case 0:
                  {
                     @nonNullableReferenceType = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.ClassDisallowingDefaultValues>(resolver).Deserialize(ref reader, options)!;
                     break;
                  }
                  case 1:
                  {
                     @nullableReferenceType = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.ClassDisallowingDefaultValues?>(resolver).Deserialize(ref reader, options)!;
                     break;
                  }
                  case 2:
                  {
                     @nonNullableStruct = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.StructDisallowingDefaultValues>(resolver).Deserialize(ref reader, options)!;
                     break;
                  }
                  case 3:
                  {
                     @nullableStruct = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.StructDisallowingDefaultValues?>(resolver).Deserialize(ref reader, options)!;
                     break;
                  }
                  default:
                     reader.Skip();
                     break;
               }
            }

            if (!@nonNullableStruct.IsSet)
               throw new global::MessagePack.MessagePackSerializationException($"Cannot deserialize type \"TestValueObject\" because the member \"_nonNullableStruct\" of type \"global::Thinktecture.Tests.StructDisallowingDefaultValues\" is missing and does not allow default values.");

            var validationError = global::Thinktecture.Tests.TestValueObject.Validate(
                                       @nonNullableReferenceType!,
                                       @nullableReferenceType!,
                                       @nonNullableStruct.Value,
                                       @nullableStruct!,
                                       out var obj);

            if (validationError is not null)
               throw new global::MessagePack.MessagePackSerializationException(validationError.ToString() ?? "Unable to deserialize \"TestValueObject\".");

            return obj;
         }
         finally
         {
           reader.Depth--;
         }
      }

      /// <inheritdoc />
      public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Thinktecture.Tests.TestValueObject? value, global::MessagePack.MessagePackSerializerOptions options)
      {
         if(value is null)
         {
            writer.WriteNil();
            return;
         }

         writer.WriteArrayHeader(4);

         var resolver = options.Resolver;
         global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.ClassDisallowingDefaultValues>(resolver).Serialize(ref writer, value._nonNullableReferenceType, options);
         global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.ClassDisallowingDefaultValues?>(resolver).Serialize(ref writer, value._nullableReferenceType, options);
         global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.StructDisallowingDefaultValues>(resolver).Serialize(ref writer, value._nonNullableStruct, options);
         global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Thinktecture.Tests.StructDisallowingDefaultValues?>(resolver).Serialize(ref writer, value._nullableStruct, options);
      }
   }
}
