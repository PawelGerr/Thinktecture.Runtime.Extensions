// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

partial class _1TestValueObject :
   global::System.Numerics.ISubtractionOperators<global::Thinktecture.Tests._1TestValueObject, global::Thinktecture.Tests._1TestValueObject, global::Thinktecture.Tests._1TestValueObject>
{
   /// <inheritdoc cref="global::System.Numerics.ISubtractionOperators{TSelf, TOther, TResult}.op_Subtraction(TSelf, TOther)" />
   public static global::Thinktecture.Tests._1TestValueObject operator -(global::Thinktecture.Tests._1TestValueObject left, global::Thinktecture.Tests._1TestValueObject right)
   {
      global::System.ArgumentNullException.ThrowIfNull(nameof(left));
      global::System.ArgumentNullException.ThrowIfNull(nameof(right));
      return Create((left._1Key - right._1Key));
   }

   /// <inheritdoc cref="global::System.Numerics.ISubtractionOperators{TSelf, TOther, TResult}.op_Subtraction(TSelf, TOther)" />
   public static global::Thinktecture.Tests._1TestValueObject operator checked -(global::Thinktecture.Tests._1TestValueObject left, global::Thinktecture.Tests._1TestValueObject right)
   {
      global::System.ArgumentNullException.ThrowIfNull(nameof(left));
      global::System.ArgumentNullException.ThrowIfNull(nameof(right));
      return Create(checked((left._1Key - right._1Key)));
   }
}
