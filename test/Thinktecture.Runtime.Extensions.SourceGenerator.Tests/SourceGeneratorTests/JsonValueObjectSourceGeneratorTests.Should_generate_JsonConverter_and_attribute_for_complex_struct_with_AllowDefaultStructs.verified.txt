// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::System.Text.Json.Serialization.JsonConverterAttribute(typeof(ValueObjectJsonConverterFactory))]
partial struct TestValueObject
{
   /// <summary>
   /// JSON converter for <see cref="TestValueObject"/>.
   /// </summary>
   public sealed class ValueObjectJsonConverter : global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.TestValueObject>
   {
      private readonly global::System.Text.Json.Serialization.JsonConverter<string> _referenceFieldConverter;
      private readonly string _referenceFieldPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<int> _structPropertyConverter;
      private readonly string _structPropertyPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<decimal?> _nullableStructPropertyConverter;
      private readonly string _nullableStructPropertyPropertyName;

      /// <summary>
      /// Initializes JSON converter for <see cref="TestValueObject"/>.
      /// </summary>
      public ValueObjectJsonConverter(global::System.Text.Json.JsonSerializerOptions options)
      {
         if(options is null)
            throw new global::System.ArgumentNullException(nameof(options));

         var namingPolicy = options.PropertyNamingPolicy;

         this._referenceFieldConverter = (global::System.Text.Json.Serialization.JsonConverter<string>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(string));
         this._referenceFieldPropertyName = namingPolicy?.ConvertName("ReferenceField") ?? "ReferenceField";
         this._structPropertyConverter = (global::System.Text.Json.Serialization.JsonConverter<int>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(int));
         this._structPropertyPropertyName = namingPolicy?.ConvertName("StructProperty") ?? "StructProperty";
         this._nullableStructPropertyConverter = (global::System.Text.Json.Serialization.JsonConverter<decimal?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(decimal?));
         this._nullableStructPropertyPropertyName = namingPolicy?.ConvertName("NullableStructProperty") ?? "NullableStructProperty";
      }

      /// <inheritdoc />
      public override global::Thinktecture.Tests.TestValueObject Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
      {
         if (reader.TokenType == global::System.Text.Json.JsonTokenType.Null)
            return default;

         if (reader.TokenType != global::System.Text.Json.JsonTokenType.StartObject)
            throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"TestValueObject\". Expected token: \"{(global::System.Text.Json.JsonTokenType.StartObject)}\".");

         string? @referenceField = default;
         int @structProperty = default;
         decimal? @nullableStructProperty = default;

         var comparer = options.PropertyNameCaseInsensitive ? global::System.StringComparer.OrdinalIgnoreCase : global::System.StringComparer.Ordinal;

         while (reader.Read())
         {
            if (reader.TokenType == global::System.Text.Json.JsonTokenType.EndObject)
               break;

            if (reader.TokenType != global::System.Text.Json.JsonTokenType.PropertyName)
               throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"TestValueObject\". Expected token: \"{(global::System.Text.Json.JsonTokenType.PropertyName)}\".");

            var propName = reader.GetString();

            if(!reader.Read())
               throw new global::System.Text.Json.JsonException($"Unexpected end of the JSON message when trying the read the value of \"{propName}\" during deserialization of \"TestValueObject\".");

            if (comparer.Equals(propName, this._referenceFieldPropertyName))
            {
               @referenceField = this._referenceFieldConverter.Read(ref reader, typeof(string), options);
            }
            else if (comparer.Equals(propName, this._structPropertyPropertyName))
            {
               @structProperty = this._structPropertyConverter.Read(ref reader, typeof(int), options);
            }
            else if (comparer.Equals(propName, this._nullableStructPropertyPropertyName))
            {
               @nullableStructProperty = this._nullableStructPropertyConverter.Read(ref reader, typeof(decimal?), options);
            }
            else
            {
               throw new global::System.Text.Json.JsonException($"Unknown member \"{propName}\" encountered when trying to deserialize \"TestValueObject\".");
            }
         }

         var validationError = global::Thinktecture.Tests.TestValueObject.Validate(
                                    @referenceField!,
                                    @structProperty!,
                                    @nullableStructProperty!,
                                    out var obj);

         if (validationError is not null)
            throw new global::System.Text.Json.JsonException(validationError.ToString() ?? "Unable to deserialize \"TestValueObject\".");

         return obj;
      }

      /// <inheritdoc />
      public override void Write(global::System.Text.Json.Utf8JsonWriter writer, global::Thinktecture.Tests.TestValueObject value, global::System.Text.Json.JsonSerializerOptions options)
      {
         writer.WriteStartObject();

         var ignoreNullValues = options.DefaultIgnoreCondition is global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull or global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;
         var ignoreDefaultValues = options.DefaultIgnoreCondition == global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;

         var @referenceFieldPropertyValue = value.ReferenceField;

         if(!ignoreNullValues || @referenceFieldPropertyValue is not null)
         {
            writer.WritePropertyName(this._referenceFieldPropertyName);
            this._referenceFieldConverter.Write(writer, @referenceFieldPropertyValue, options);
         }
         var @structPropertyPropertyValue = value.StructProperty;

         if(!ignoreDefaultValues || !@structPropertyPropertyValue.Equals(default(int)))
         {
            writer.WritePropertyName(this._structPropertyPropertyName);
            this._structPropertyConverter.Write(writer, @structPropertyPropertyValue, options);
         }
         var @nullableStructPropertyPropertyValue = value.NullableStructProperty;

         if(!ignoreNullValues || @nullableStructPropertyPropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableStructPropertyPropertyName);
            this._nullableStructPropertyConverter.Write(writer, @nullableStructPropertyPropertyValue, options);
         }
         writer.WriteEndObject();
      }
   }
}

file class ValueObjectJsonConverterFactory : global::System.Text.Json.Serialization.JsonConverterFactory
{
   public override bool CanConvert(global::System.Type typeToConvert)
   {
      return typeof(global::Thinktecture.Tests.TestValueObject) == typeToConvert;
   }

   public override global::System.Text.Json.Serialization.JsonConverter CreateConverter(global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
   {
      if (typeToConvert is null)
         throw new global::System.ArgumentNullException(nameof(typeToConvert));

      if (options is null)
         throw new global::System.ArgumentNullException(nameof(options));

      return new global::Thinktecture.Tests.TestValueObject.ValueObjectJsonConverter(options);
   }
}
