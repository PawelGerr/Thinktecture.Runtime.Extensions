// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

[global::System.Text.Json.Serialization.JsonConverterAttribute(typeof(JsonConverterFactory))]
partial class TestValueObject
{
   /// <summary>
   /// JSON converter for <see cref="TestValueObject"/>.
   /// </summary>
   public sealed class JsonConverter : global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.TestValueObject>
   {
      private readonly global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.ClassDisallowingDefaultValues> _nonNullableReferenceTypeConverter;
      private readonly string _nonNullableReferenceTypePropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.ClassDisallowingDefaultValues?> _nullableReferenceTypeConverter;
      private readonly string _nullableReferenceTypePropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.StructDisallowingDefaultValues> _nonNullableStructConverter;
      private readonly string _nonNullableStructPropertyName;
      private readonly global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.StructDisallowingDefaultValues?> _nullableStructConverter;
      private readonly string _nullableStructPropertyName;

      /// <summary>
      /// Initializes JSON converter for <see cref="TestValueObject"/>.
      /// </summary>
      public JsonConverter(global::System.Text.Json.JsonSerializerOptions options)
      {
         if(options is null)
            throw new global::System.ArgumentNullException(nameof(options));

         var namingPolicy = options.PropertyNamingPolicy;

         this._nonNullableReferenceTypeConverter = (global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.ClassDisallowingDefaultValues>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(global::Thinktecture.Tests.ClassDisallowingDefaultValues));
         this._nonNullableReferenceTypePropertyName = namingPolicy?.ConvertName("_nonNullableReferenceType") ?? "_nonNullableReferenceType";
         this._nullableReferenceTypeConverter = (global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.ClassDisallowingDefaultValues?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(global::Thinktecture.Tests.ClassDisallowingDefaultValues));
         this._nullableReferenceTypePropertyName = namingPolicy?.ConvertName("_nullableReferenceType") ?? "_nullableReferenceType";
         this._nonNullableStructConverter = (global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.StructDisallowingDefaultValues>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(global::Thinktecture.Tests.StructDisallowingDefaultValues));
         this._nonNullableStructPropertyName = namingPolicy?.ConvertName("_nonNullableStruct") ?? "_nonNullableStruct";
         this._nullableStructConverter = (global::System.Text.Json.Serialization.JsonConverter<global::Thinktecture.Tests.StructDisallowingDefaultValues?>)global::Thinktecture.Internal.JsonSerializerOptionsExtensions.GetCustomMemberConverter(options, typeof(global::Thinktecture.Tests.StructDisallowingDefaultValues?));
         this._nullableStructPropertyName = namingPolicy?.ConvertName("_nullableStruct") ?? "_nullableStruct";
      }

      /// <inheritdoc />
      public override global::Thinktecture.Tests.TestValueObject? Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
      {
         if (reader.TokenType == global::System.Text.Json.JsonTokenType.Null)
            return default;

         if (reader.TokenType != global::System.Text.Json.JsonTokenType.StartObject)
            throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"TestValueObject\". Expected token: \"{(global::System.Text.Json.JsonTokenType.StartObject)}\".");

         global::Thinktecture.Tests.ClassDisallowingDefaultValues? @nonNullableReferenceType = default;
         global::Thinktecture.Tests.ClassDisallowingDefaultValues? @nullableReferenceType = default;
         global::Thinktecture.Argument<global::Thinktecture.Tests.StructDisallowingDefaultValues> @nonNullableStruct = default;
         global::Thinktecture.Tests.StructDisallowingDefaultValues? @nullableStruct = default;

         var comparer = options.PropertyNameCaseInsensitive ? global::System.StringComparer.OrdinalIgnoreCase : global::System.StringComparer.Ordinal;

         while (reader.Read())
         {
            if (reader.TokenType == global::System.Text.Json.JsonTokenType.EndObject)
               break;

            if (reader.TokenType != global::System.Text.Json.JsonTokenType.PropertyName)
               throw new global::System.Text.Json.JsonException($"Unexpected token \"{reader.TokenType}\" when trying to deserialize \"TestValueObject\". Expected token: \"{(global::System.Text.Json.JsonTokenType.PropertyName)}\".");

            var propName = reader.GetString();

            if(!reader.Read())
               throw new global::System.Text.Json.JsonException($"Unexpected end of the JSON message when trying the read the value of \"{propName}\" during deserialization of \"TestValueObject\".");

            if (comparer.Equals(propName, this._nonNullableReferenceTypePropertyName))
            {
               @nonNullableReferenceType = this._nonNullableReferenceTypeConverter.Read(ref reader, typeof(global::Thinktecture.Tests.ClassDisallowingDefaultValues), options);
            }
            else if (comparer.Equals(propName, this._nullableReferenceTypePropertyName))
            {
               @nullableReferenceType = this._nullableReferenceTypeConverter.Read(ref reader, typeof(global::Thinktecture.Tests.ClassDisallowingDefaultValues), options);
            }
            else if (comparer.Equals(propName, this._nonNullableStructPropertyName))
            {
               @nonNullableStruct = this._nonNullableStructConverter.Read(ref reader, typeof(global::Thinktecture.Tests.StructDisallowingDefaultValues), options);
            }
            else if (comparer.Equals(propName, this._nullableStructPropertyName))
            {
               @nullableStruct = this._nullableStructConverter.Read(ref reader, typeof(global::Thinktecture.Tests.StructDisallowingDefaultValues?), options);
            }
            else
            {
               throw new global::System.Text.Json.JsonException($"Unknown member \"{propName}\" encountered when trying to deserialize \"TestValueObject\".");
            }
         }

         if (!@nonNullableStruct.IsSet)
            throw new global::System.Text.Json.JsonException($"Cannot deserialize type \"TestValueObject\" because the member \"_nonNullableStruct\" of type \"global::Thinktecture.Tests.StructDisallowingDefaultValues\" is missing and does not allow default values.");

         var validationError = global::Thinktecture.Tests.TestValueObject.Validate(
                                    @nonNullableReferenceType!,
                                    @nullableReferenceType!,
                                    @nonNullableStruct.Value,
                                    @nullableStruct!,
                                    out var obj);

         if (validationError is not null)
            throw new global::System.Text.Json.JsonException(validationError.ToString() ?? "Unable to deserialize \"TestValueObject\".");

         return obj;
      }

      /// <inheritdoc />
      public override void Write(global::System.Text.Json.Utf8JsonWriter writer, global::Thinktecture.Tests.TestValueObject value, global::System.Text.Json.JsonSerializerOptions options)
      {
         writer.WriteStartObject();

         var ignoreNullValues = options.DefaultIgnoreCondition is global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull or global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;
         var ignoreDefaultValues = options.DefaultIgnoreCondition == global::System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault;

         var @nonNullableReferenceTypePropertyValue = value._nonNullableReferenceType;

         if(!ignoreNullValues || @nonNullableReferenceTypePropertyValue is not null)
         {
            writer.WritePropertyName(this._nonNullableReferenceTypePropertyName);
            this._nonNullableReferenceTypeConverter.Write(writer, @nonNullableReferenceTypePropertyValue, options);
         }
         var @nullableReferenceTypePropertyValue = value._nullableReferenceType;

         if(!ignoreNullValues || @nullableReferenceTypePropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableReferenceTypePropertyName);
            this._nullableReferenceTypeConverter.Write(writer, @nullableReferenceTypePropertyValue, options);
         }
         var @nonNullableStructPropertyValue = value._nonNullableStruct;

         if(!ignoreDefaultValues || !@nonNullableStructPropertyValue.Equals(default(global::Thinktecture.Tests.StructDisallowingDefaultValues)))
         {
            writer.WritePropertyName(this._nonNullableStructPropertyName);
            this._nonNullableStructConverter.Write(writer, @nonNullableStructPropertyValue, options);
         }
         var @nullableStructPropertyValue = value._nullableStruct;

         if(!ignoreNullValues || @nullableStructPropertyValue is not null)
         {
            writer.WritePropertyName(this._nullableStructPropertyName);
            this._nullableStructConverter.Write(writer, @nullableStructPropertyValue, options);
         }
         writer.WriteEndObject();
      }
   }

   /// <summary>
   /// JSON converter factory for <see cref="TestValueObject"/>.
   /// </summary>
   public class JsonConverterFactory : global::System.Text.Json.Serialization.JsonConverterFactory
   {
      /// <inheritdoc />
      public override bool CanConvert(global::System.Type typeToConvert)
      {
         return typeof(global::Thinktecture.Tests.TestValueObject).IsAssignableFrom(typeToConvert);
      }

      /// <inheritdoc />
      public override global::System.Text.Json.Serialization.JsonConverter CreateConverter(global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
      {
         if (typeToConvert is null)
            throw new global::System.ArgumentNullException(nameof(typeToConvert));
         if (options is null)
            throw new global::System.ArgumentNullException(nameof(options));

         return new JsonConverter(options);
      }
   }
}
