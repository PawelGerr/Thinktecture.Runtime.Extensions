// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

partial class TestValueObject :
   global::System.IComparable,
   global::System.IComparable<global::Thinktecture.Tests.TestValueObject>
{
   /// <inheritdoc />
   public int CompareTo(object? obj)
   {
      if(obj is null)
         return 1;

      if(obj is not global::Thinktecture.Tests.TestValueObject item)
         throw new global::System.ArgumentException("Argument must be of type \"TestValueObject\".", nameof(obj));

      return ((global::System.IComparable)this).CompareTo(item);
   }

   /// <inheritdoc />
   public int CompareTo(global::Thinktecture.Tests.TestValueObject? obj)
   {
      if(obj is null)
         return 1;

      return global::Thinktecture.ComparerAccessors.StringOrdinal.Comparer.Compare(this._value, obj._value);
   }
}
