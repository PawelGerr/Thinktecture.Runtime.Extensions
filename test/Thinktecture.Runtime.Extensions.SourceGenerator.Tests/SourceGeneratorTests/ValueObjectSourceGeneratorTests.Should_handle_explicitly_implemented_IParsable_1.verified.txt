// <auto-generated />
#nullable enable

namespace Thinktecture.Tests;

partial class ValueObjectForStructWithExplicitInterfaceImplementation :
   global::System.IParsable<global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation>
{
   private static global::Thinktecture.ValidationError? Validate<T>(global::Thinktecture.Tests.StructWithExplicitInterfaceImplementation key, global::System.IFormatProvider? provider, out global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation? result)
      where T : global::Thinktecture.IObjectFactory<global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation, global::Thinktecture.Tests.StructWithExplicitInterfaceImplementation, global::Thinktecture.ValidationError>
   {
      return T.Validate(key, provider, out result);
   }

   /// <inheritdoc />
   public static global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation Parse(string s, global::System.IFormatProvider? provider)
   {
      var key = ParseValue<global::Thinktecture.Tests.StructWithExplicitInterfaceImplementation>(s, provider);
      var validationError = Validate<global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation>(key, provider, out var result);

      if(validationError is null)
         return result!;

      throw new global::System.FormatException(validationError.ToString() ?? "Unable to parse \"ValueObjectForStructWithExplicitInterfaceImplementation\".");
   }

   [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
   private static TValue ParseValue<TValue>(string s, global::System.IFormatProvider? provider)
      where TValue : global::System.IParsable<TValue>
   {
      return TValue.Parse(s, provider);
   }

   /// <inheritdoc />
   public static bool TryParse(
      string? s,
      global::System.IFormatProvider? provider,
      [global::System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)] out global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation result)
   {
      if(s is null)
      {
         result = default;
         return false;
      }

      if (!TryParseValue<global::Thinktecture.Tests.StructWithExplicitInterfaceImplementation>(s, provider, out var key))
      {
         result = default;
         return false;
      }

      var validationError = Validate<global::Thinktecture.Tests.ValueObjectForStructWithExplicitInterfaceImplementation>(key, provider, out result!);
      return validationError is null;
   }

   [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
   private static bool TryParseValue<TValue>(string? s, global::System.IFormatProvider? provider, [global::System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)] out TValue result)
      where TValue : global::System.IParsable<TValue>
   {
      return TValue.TryParse(s, provider, out result);
   }
}
